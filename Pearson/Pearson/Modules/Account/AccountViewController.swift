//
//  AccountViewController.swift
//  Pearson
//
//  Created by Dima Tsurkan on 09.11.2017.
//  Copyright (c) 2017 Dima Tsurkan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AccountDisplayLogic: class {
    func displayError(viewModel: Account.FetchProfile.ViewModel)
    func displayUser(viewModel: Account.FetchProfile.ViewModel)
}

class AccountViewController: UIViewController, AccountDisplayLogic {
    var interactor: AccountBusinessLogic?
    var router: (NSObjectProtocol & AccountRoutingLogic & AccountDataPassing)?

    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = AccountInteractor()
        let presenter = AccountPresenter()
        let router = AccountRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
  
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchProfileOnLoad()
    }
    
    // MARK: - Internal
    
    private func showAlert(withTitle title: String, message: String?) {
        let alertController = UIAlertController(title: title, message: message, preferredStyle: .alert)
        let okAction = UIAlertAction(title: "OK", style: .cancel, handler: nil)
        alertController.addAction(okAction)
        self.present(alertController, animated: true, completion: nil)
    }
  
    // MARK: - Fetch Profile
  
    func fetchProfileOnLoad() {
        let request = Account.FetchProfile.Request()
        interactor?.fetchProfile(request: request)
    }
  
    func displayError(viewModel: Account.FetchProfile.ViewModel) {
        showAlert(withTitle: "Can't load user profile", message: viewModel.printableError)
    }
    
    func displayUser(viewModel: Account.FetchProfile.ViewModel) {
        
    }
}
