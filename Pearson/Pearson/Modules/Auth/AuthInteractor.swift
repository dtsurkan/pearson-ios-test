//
//  AuthInteractor.swift
//  Pearson
//
//  Created by Dima Tsurkan on 09.11.2017.
//  Copyright (c) 2017 Dima Tsurkan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthBusinessLogic {
    func auth(request: Auth.AuthProcess.Request)
}

protocol AuthDataStore {
    var login: String { get set }
    var accessToken: String { get set }
}

class AuthInteractor: AuthBusinessLogic, AuthDataStore {
    var presenter: AuthPresentationLogic?
    var worker: AuthWorker?
    var login: String = ""
    var accessToken: String = ""
  
    // MARK: - Auth
  
    func auth(request: Auth.AuthProcess.Request) {
        worker = AuthWorker()
        worker?.auth(login: request.login, password: request.password, completion: { (token, error) in
            if let theToken = token {
                self.accessToken = theToken
                let response = Auth.AuthProcess.Response(accessToken: self.accessToken, printableError: nil)
                self.presenter?.presentAuthentificaedUser(response: response)
            } else {
                let response = Auth.AuthProcess.Response(accessToken: nil, printableError: error)
                self.presenter?.presentError(response: response)
            }
        })
    }
}
